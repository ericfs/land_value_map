---
- name: Process Land Value and Generate Map Tiles
  hosts: localhost
  vars_files:
    - "config.yml"

  tasks:
    - name: Install Python dependencies
      ansible.builtin.pip:
        requirements: "{{ working_dir }}/ansible/requirements.txt"

    - name: Create build_dir folder.
      ansible.builtin.file:
        path: "{{ build_dir }}"
        state: directory
        mode: 0755

    - name: Generate GeoJSON
      ansible.builtin.command:
        argv:
          - "python3"
          - "{{ working_dir }}/src/main.py"
          - "--input_dir=.."
          - "--output_dir={{ build_dir }}"
        chdir: "{{ working_dir }}"
        creates: "{{ geojson_dir }}"

    - name: Check if map tiles already exist
      ansible.builtin.stat:
        path: "{{ tiles_dir }}/metadata.json"
      register: tiles_status

    - name: Create tippecanoe folder.
      ansible.builtin.file:
        path: "{{ build_dir }}/tippecanoe"
        state: directory
        mode: 0755
    
    - name: Fill Tippecanoe Docker Compose template
      ansible.builtin.template:
        src: "{{ working_dir }}/tippecanoe/docker-compose.yml.j2"
        dest: "{{ build_dir }}/tippecanoe/docker-compose.yml"
    
    - name: Generate Map Tiles
      community.docker.docker_compose_v2_run:
        project_src: "{{ build_dir }}/tippecanoe"
        service: "tippecanoe"
        cleanup: true
      when: not tiles_status.stat.exists
    
    - name: Fill tile.json
      ansible.builtin.command:
        chdir: "{{ working_dir }}"
        argv:
          - "python3"
          - "{{ working_dir }}/src/merge_tilejson.py"
          - "--tilejson={{ working_dir }}/templates/tile.json"
          - "--metadata={{ build_dir }}/tiles/metadata.json"
          - "--output={{ build_dir }}/tile.json"
          - "--scheme={{ scheme }}"
          - "--hostname={{ hostname }}"
          - "--version={{ version }}"

- name: Deploy static map site
  hosts: localhost
  vars_files:
    - "config.yml"

  tasks:
    - name: Create deployment folder.
      ansible.builtin.file:
        path: "{{ deploy_dir }}/static/{{ version }}/tiles"
        state: directory
        mode: 0755
    
    - name: Sync Deployment directory
      ansible.posix.synchronize:
        src: "{{ working_dir }}/serving/"
        dest: "{{ deploy_dir }}"
        delete: false
        recursive: true
        perms: false
    
    - name: Sync generated tiles directory
      ansible.posix.synchronize:
        src: "{{ build_dir }}/tiles/"
        dest: "{{ deploy_dir }}/static/{{ version }}/tiles"
        delete: false
        recursive: true
        perms: false
    
    - name: Sync generated tile.json
      ansible.posix.synchronize:
        src: "{{ build_dir }}/tile.json"
        dest: "{{ deploy_dir }}/static/{{ version }}"
        delete: false
        recursive: true
        perms: false

    - name: Fill static HTML templates
      ansible.builtin.template:
        src: "{{ working_dir }}/templates/index.html.j2"
        dest: "{{ deploy_dir }}/static/index.html"

    - name: Start nginx to serve the map
      community.docker.docker_compose_v2:
        project_src: "{{ deploy_dir }}"